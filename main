#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
char tabballot [17];
int tabverif [9];
int nbtirage;
void colonne1();
void colonne2();
void colonne3();
void colonne4();
char vente1[12];
char vente2[8];
char vente3[4];
void remplitabballot();
int tirage();
int isvalid(int F);
void inittabverif();
void inittabballot();


int main() {
    srand(time(NULL));//permet d'initier la fonction random
    inittabverif();
    for (int i=0;i<9;i++){
        tirage();
    }
    triage();



}

    void colonne1 (){
        char tabcol1 [3] = {'jaune','orange','bleu'};
    }

    void colonne2 (){
        char tabcol2 [3] = {'bleu','jaune','violet'};
    }

    void colonne3 (){
        char tabcol3 [3] = {'orange','violet','bleu'};
    }

    void colonne4 (){
        char tabcol4 [3] = {'violet','bleu','orange'};
    }

    typedef struct joueur {
        int roupie;
        int palais;
        int jetville;
        int jetcomptoir;
        int jetclient;
        char ballot [2];
    } joueur;

    void remplitabballot (){
        tabballot[0] = 'jaune';
        tabballot[1] = 'jaune';
        tabballot[2] = 'jaune';
        tabballot[3] = 'violet';
        tabballot[4] = 'violet';
        tabballot[5] = 'violet';
        tabballot[6] = 'violet';
        tabballot[7] = 'bleu';
        tabballot[8] = 'bleu';
        tabballot[9] = 'bleu';
        tabballot[10] = 'bleu';
        tabballot[11] = 'bleu';
        tabballot[12] = 'orange';
        tabballot[13] = 'orange';
        tabballot[14] = 'orange';
        tabballot[15] = 'orange';
        tabballot[16] = 'orange';
    }

    int tirage (){ // programme de tirage aléatoire
    int aleatoire = 0;
    int i;
    int k = 0;
    nbtirage ++;
        do {
            aleatoire = rand()%17;
        }while(!isvalid(aleatoire));
        tabverif[nbtirage] = aleatoire;
    printf("%d\n", tabverif[nbtirage]);
    return(aleatoire);
    }

    int isvalid(int F){ // programme qui vérifie si le nombre aléatoire n'est pas déjà sorti
        int i;
        int o =0;
        for(i=0;i<8;i++){
            if (tabverif[i]== F){
                return 0;
            }
            return 1;
            }
    }

    void inittabverif() { //programme pour initialiser le tableau de verification
    for(int i=0;i<9;i++){
        tabverif[i] =0;
    }
    }

    void inittabballot() { //programme pour initialiser le tableau des ballots
    for(int i=0;i<17;i++){
        tabballot[i] = ' ' ;
    }
    }

    void triage (){
        int nbj =0;
        int nbb =0;
        int nbv =0;
        int nbo =0;
        for(int i =0;i<8;i++){
            if(tabverif[i]<3){
                nbj ++;
            }
            else {
                if(tabverif[i]>=3 && tabverif[i]<7){
                    nbv++;
                }
                else {
                    if(tabverif[i]>=7 && tabverif<12){
                        nbb++;
                    }
                    else {
                        nbo++;
                    }
                }
            }
        }
        int tabtri[4] = {nbj,nbb,nbo,nbv};
        char tabtricoul[4] = {'jaune','bleu','oange','violet'};
        for(int j=0;j<4;j++){
            printf("\n%d",tabtri[j]);
        }
        tri_a_bulle(tabtri,tabtricoul);
        for(int j=0;j<4;j++){
            printf("\n%d",tabtri[j]);
        }

    }

void tri_a_bulle(int*t, int *t2){
    int j =0;
    int tmp =0;
    char trans;
    int en_desordre =1;
    while (en_desordre == 1){
        en_desordre = 0;
        for (j =0; j < 3; j++){
            if(t[j] > t[j+1]){
                tmp = t[j+1];
                trans = t2[j+1];
                t[j+1] = t[j];
                t2[j+1] = t2[j];
                t[j] = tmp;
                t2[j] = trans;
                en_desordre = 1;
            }
        }
    }
}

void range_commerce (int*t,char*tt){
    //couleur la plus présente
    if (t[0] == t[1]){
        for (int i =0;i<t[0];i++){
            vente1[i] = tt[0];
            vente1[i+t[0]] = tt[1];
        }
    }

    else {
        for (int j =0;j<t[0];j++){
            vente1[j] = tt[0];
        }
    }
    //2eme couleur la plus présente
    if (t[1] == t[2]){
        for (int k =0;k<t[1];k++){
            vente2[k] = tt[1];
            vente2[k+t[1]] = tt[2];
        }
    }

    else {
        if (t[1] == t[2] == t[3]){
            for (int l =0;l<t[1];l++){
                vente2[l] = tt[1];
                vente2[l+t[1]] = tt[2];
                vente2[l+t[1]+t[1]] = tt[3];
            }
        }
        else {
            for (int m =0;m<t[1];m++){
                vente2[m] = tt[1];
            }
        }
    }
    //3eme couleur laplus présente
    if (t[2] == t[3]){
        for (int n =0;n<t[2];n++){
            vente3[n] = tt[2];
            vente3[n+t[2]] = tt[3];
        }
    }
    else {
         for (int o =0;o<t[2];o++){
            vente3[o] = tt[3];
         }
    }
}

void tribullealeat(char *t, char *t2){
    int j;
    char tmp;
    char trans;
        for (int n =0; n < 3; n++){
            j = n + rand()%(8-n);
            tmp = t[n];
            trans = t2[n];
            t[n] = t[j];
            t2[n] = t2[j];
            t[j] = tmp;
            t2[j] = trans;
        }
    }
/*
void mep_jet_compt_et_pal{
    tabaff[1] = tabcompt[0];
}


void achat_ville (int ville){
    if (ville == 1){
        printf("quel ballot souhaitez vous vendre ?\n");
        for(int i = 1;i<4;i++){
            printf("%d. %c",i,demvi1[i-1]);
        }
        int vente;
        scanf("%d",vente);
        atilleballot(demvi1[vente-1]);
    }
}


void atilleballot (char* ve,){
    if (ve ==  )
}

void demvil (){

}

*/



